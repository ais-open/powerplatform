<?xml version="1.0" encoding="utf-8"?>
<manifest>
  <control namespace="ais" constructor="reactquerybuilder" version="0.0.34" display-name-key="reactquerybuilder" description-key="reactquerybuilder description" control-type="standard">
    <!--external-service-usage node declares whether this 3rd party PCF control is using external service or not, if yes, this control will be considered as premium and please also add the external domain it is using.
    If it is not using any external service, please set the enabled="false" and DO NOT add any domain below. The "enabled" will be false by default.
    Example1:
      <external-service-usage enabled="true">
        <domain>www.Microsoft.com</domain>
      </external-service-usage>
    Example2:
      <external-service-usage enabled="false">
      </external-service-usage>
    -->
    <external-service-usage enabled="false">
      <!--UNCOMMENT TO ADD EXTERNAL DOMAINS
      <domain></domain>
      <domain></domain>
      -->
    </external-service-usage>
    <!-- property node identifies a specific, configurable piece of data that the control expects from CDS -->
    <property name="sampleProperty" display-name-key="Property_Display_Key" description-key="Property_Desc_Key" of-type="SingleLine.Text" usage="bound" required="false" />
    <property name="initialQuery" display-name-key="Initial Query" description-key="The initial query in JSON format" of-type="SingleLine.Text" usage="bound" required="false" />
    <property name="fields" display-name-key="Fields" description-key="The fields configuration in JSON format" of-type="SingleLine.Text" usage="bound" required="false" />
    <property name="isreadonly" display-name-key="IsReadOnly" description-key="Whether the control is to be readonly" of-type="TwoOptions" usage="bound" required="false" />
    <property name="reset" display-name-key="Reset" description-key="Whether the control is to be readonly" of-type="TwoOptions" usage="bound" required="false" />
    <!-- Outputs -->
    <property name="queryjson" display-name-key="Query JSON" description-key="The query in JSON format" of-type="SingleLine.Text" usage="output" required="false" />
    <property name="querysql" display-name-key="Query SQL" description-key="The query in SQL format" of-type="SingleLine.Text" usage="output" required="false" />
    <property name="formattedsqlquery" display-name-key="Formatted Query SQL" description-key="The query in formatted SQL" of-type="SingleLine.Text" usage="output" required="false" />
    <!-- Fields Dataset Property-->
    <data-set name="items" display-name-key="Items">
      <property-set name="name" display-name-key="FieldName" of-type="SingleLine.Text" usage="bound" required="true" />
      <property-set name="label" display-name-key="FieldLabel" of-type="SingleLine.Text" usage="bound" required="true" />
      <property-set name="inputType" display-name-key="FieldType" of-type="SingleLine.Text" usage="bound" required="true" />
    </data-set>
    <!--
      Property node's of-type attribute can be of-type-group attribute.
      Example:
      <type-group name="numbers">
        <type>Whole.None</type>
        <type>Currency</type>
        <type>FP</type>
        <type>Decimal</type>
      </type-group>
      <property name="sampleProperty" display-name-key="Property_Display_Key" description-key="Property_Desc_Key" of-type-group="numbers" usage="bound" required="true" />
    -->
    <resources>
      <code path="index.ts" order="1" />
      <css path="css/query-builder.css" order="2" />
      <!-- UNCOMMENT TO ADD MORE RESOURCES
      <resx path="strings/reactquerybuilder.1033.resx" version="1.0.0" />
      -->
    </resources>
    <!-- UNCOMMENT TO ENABLE THE SPECIFIED API
    <feature-usage>
      <uses-feature name="Device.captureAudio" required="true" />
      <uses-feature name="Device.captureImage" required="true" />
      <uses-feature name="Device.captureVideo" required="true" />
      <uses-feature name="Device.getBarcodeValue" required="true" />
      <uses-feature name="Device.getCurrentPosition" required="true" />
      <uses-feature name="Device.pickFile" required="true" />
      <uses-feature name="Utility" required="true" />
      <uses-feature name="WebAPI" required="true" />
    </feature-usage>
    -->
  </control>
</manifest>